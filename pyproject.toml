[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "lunar-eclipse-align"
dynamic = ["version"]
description = "月食圆面对齐工具 - 用于处理月食照片的圆面对齐"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "正七价的氟离子"}
]
keywords = ["lunar", "eclipse", "astronomy", "image", "processing", "alignment", "qt", "pyside6"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Operating System :: OS Independent",
    "Environment :: X11 Applications :: Qt",
]
requires-python = ">=3.8"
dependencies = [
    "opencv-python>=4.12",
    "numpy>=2.3.3",
    "pillow>=11.3",
    "psutil",
    "PySide6>=6.9.2",
    "scipy>=1.16",
    "scikit-image>=0.25.2"
]
[project.optional-dependencies]
test = ["pytest>=7.0", "pytest-qt>=4.0", "pytest-cov>=4.0"]
[project.scripts]
lunar-eclipse-align = "lunar_eclipse_align.main:main"

# Black 代码格式化配置
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort 导入排序配置
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["utils_common", "algorithms_circle", "algorithms_refine", "ui", "ui_windows", "pipeline"]

# flake8 配置
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".eggs"]

# mypy 类型检查配置
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

# pytest 测试配置
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage 配置
[tool.coverage.run]
source = ["lunar_eclipse_align"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]